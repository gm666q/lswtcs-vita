//SharedShaders/0x33c8c744.ios_vcode uklgonzale Tue Mar 11 16:29:54 2014

precision highp float;



struct VertexInput {
    vec4 _position;
    vec4 _normal;
    vec4 _colorSet0;
    vec4 _blendWeight0;
    vec4 _blendIndices0;
    vec2 _uvSet0;
};

struct VertexOutput {
    vec4 _varying_position;
    vec4 _varying_colorSet0;
    vec4 _texcoord0;
    vec3 _texcoord1;
    vec2 _texcoord2;
    float _texcoord3;
};

struct FragmentOutput {
    vec4 _color[1];
};

VertexOutput _TMP15;
float _TMP2;
float _TMP6;
float _TMP1;
float _TMP0;
vec4 _TMP8;
vec2 _TMP21;
vec3 _TMP20;
vec4 _TMP18;
vec4 _TMP17[4];
vec4 _TMP5;
float _TMP10;
float _TMP9;
float _TMP12;
float _TMP11;
vec4 _C0095[4];
vec3 _normal0097;
vec3 _v0099;
vec3 _r0101;
vec3 _M0101[3];
vec3 _r0103;
vec3 _M0103[3];
vec3 _v0105;
vec3 _v0111;
vec3 _TMP890111[3];
vec3 _r0113;
vec4 _skinMatrix00118[4];
vec4 _skinMatrix10118[4];
vec4 _r0120;
vec4 _r0122;
vec4 _r0126;
vec4 _r0128;
vec4 _r0134;
vec4 _M0134[4];
vec4 _v0140;
vec4 _b0142;
float _b0146;
float _a0148;
attribute vec4 NORMAL;
attribute vec4 COLOR;
attribute vec4 BLENDWEIGHT0;
attribute vec4 BLENDINDICES0;
attribute vec4 TEXCOORD0;
vec3 _TMP149;
vec3 _TMP150;
vec3 _TMP151;
vec3 _TMP152;
vec3 _TMP153;
vec3 _TMP154;
vec3 _TMP155;
vec3 _TMP156;
vec3 _TMP157;
vec3 _TMP158;
vec3 _TMP159;
vec3 _TMP160;
vec3 _TMP161;
vec3 _TMP162;
vec3 _TMP163;
uniform vec4 _viewProj[4];
uniform vec4 _vs_view[4];
uniform vec4 _world[4];
uniform vec4 _skinMatrix[36];
uniform vec4 _kTint;
uniform vec4 _fog_params;
uniform vec2 _uvOffset0;
attribute vec4 cg_Vertex;
varying vec4 cg_FrontColor;
varying vec4 cg_TexCoord1;
varying vec4 cg_TexCoord3;
varying vec4 cg_TexCoord0;
varying vec4 cg_TexCoord2;

 void main()
{

    float _dist;
    float _dd;

    _C0095[0] = _world[0].x*_vs_view[0] + _world[0].y*_vs_view[1] + _world[0].z*_vs_view[2] + _world[0].w*_vs_view[3];
    _C0095[1] = _world[1].x*_vs_view[0] + _world[1].y*_vs_view[1] + _world[1].z*_vs_view[2] + _world[1].w*_vs_view[3];
    _C0095[2] = _world[2].x*_vs_view[0] + _world[2].y*_vs_view[1] + _world[2].z*_vs_view[2] + _world[2].w*_vs_view[3];
    _C0095[3] = _world[3].x*_vs_view[0] + _world[3].y*_vs_view[1] + _world[3].z*_vs_view[2] + _world[3].w*_vs_view[3];
    _TMP17[0] = vec4(float(_C0095[0].x), float(_C0095[0].y), float(_C0095[0].z), float(_C0095[0].w));
    _TMP17[1] = vec4(float(_C0095[1].x), float(_C0095[1].y), float(_C0095[1].z), float(_C0095[1].w));
    _TMP17[2] = vec4(float(_C0095[2].x), float(_C0095[2].y), float(_C0095[2].z), float(_C0095[2].w));
    _TMP17[3] = vec4(float(_C0095[3].x), float(_C0095[3].y), float(_C0095[3].z), float(_C0095[3].w));
    _normal0097 = NORMAL.xyz*2.00000000E+000 - 1.00000000E+000;
    _TMP149.x = _skinMatrix[(4*int(BLENDINDICES0.x) + 0)].x;
    _TMP149.y = _skinMatrix[(4*int(BLENDINDICES0.x) + 0)].y;
    _TMP149.z = _skinMatrix[(4*int(BLENDINDICES0.x) + 0)].z;
    _TMP150.x = _skinMatrix[(4*int(BLENDINDICES0.x) + 1)].x;
    _TMP150.y = _skinMatrix[(4*int(BLENDINDICES0.x) + 1)].y;
    _TMP150.z = _skinMatrix[(4*int(BLENDINDICES0.x) + 1)].z;
    _TMP151.x = _skinMatrix[(4*int(BLENDINDICES0.x) + 2)].x;
    _TMP151.y = _skinMatrix[(4*int(BLENDINDICES0.x) + 2)].y;
    _TMP151.z = _skinMatrix[(4*int(BLENDINDICES0.x) + 2)].z;
    _M0101[0] = vec3(float(_TMP149.x), float(_TMP149.y), float(_TMP149.z));
    _M0101[1] = vec3(float(_TMP150.x), float(_TMP150.y), float(_TMP150.z));
    _M0101[2] = vec3(float(_TMP151.x), float(_TMP151.y), float(_TMP151.z));
    _r0101 = _normal0097.x*_M0101[0];
    _r0101 = _r0101 + _normal0097.y*_M0101[1];
    _r0101 = _r0101 + _normal0097.z*_M0101[2];
    _TMP152.x = _skinMatrix[(4*int(BLENDINDICES0.y) + 0)].x;
    _TMP152.y = _skinMatrix[(4*int(BLENDINDICES0.y) + 0)].y;
    _TMP152.z = _skinMatrix[(4*int(BLENDINDICES0.y) + 0)].z;
    _TMP153.x = _skinMatrix[(4*int(BLENDINDICES0.y) + 1)].x;
    _TMP153.y = _skinMatrix[(4*int(BLENDINDICES0.y) + 1)].y;
    _TMP153.z = _skinMatrix[(4*int(BLENDINDICES0.y) + 1)].z;
    _TMP154.x = _skinMatrix[(4*int(BLENDINDICES0.y) + 2)].x;
    _TMP154.y = _skinMatrix[(4*int(BLENDINDICES0.y) + 2)].y;
    _TMP154.z = _skinMatrix[(4*int(BLENDINDICES0.y) + 2)].z;
    _M0103[0] = vec3(float(_TMP152.x), float(_TMP152.y), float(_TMP152.z));
    _M0103[1] = vec3(float(_TMP153.x), float(_TMP153.y), float(_TMP153.z));
    _M0103[2] = vec3(float(_TMP154.x), float(_TMP154.y), float(_TMP154.z));
    _r0103 = _normal0097.x*_M0103[0];
    _r0103 = _r0103 + _normal0097.y*_M0103[1];
    _r0103 = _r0103 + _normal0097.z*_M0103[2];
    _v0105 = _r0101*BLENDWEIGHT0.x + _r0103*(1.00000000E+000 - BLENDWEIGHT0.x);
    _TMP11 = dot(vec3(float(_v0105.x), float(_v0105.y), float(_v0105.z)), vec3(float(_v0105.x), float(_v0105.y), float(_v0105.z)));
    _TMP9 = float(_TMP11);
    _TMP12 = inversesqrt(float(_TMP9));
    _TMP10 = float(_TMP12);
    _v0099 = _TMP10*_v0105;
    _v0111 = vec3(float(_v0099.x), float(_v0099.y), float(_v0099.z));
    _TMP155.x = _TMP17[0].x;
    _TMP156.y = _TMP17[0].y;
    _TMP157.z = _TMP17[0].z;
    _TMP890111[0] = vec3(float(_TMP155.x), float(_TMP156.y), float(_TMP157.z));
    _TMP158.x = _TMP17[1].x;
    _TMP159.y = _TMP17[1].y;
    _TMP160.z = _TMP17[1].z;
    _TMP890111[1] = vec3(float(_TMP158.x), float(_TMP159.y), float(_TMP160.z));
    _TMP161.x = _TMP17[2].x;
    _TMP162.y = _TMP17[2].y;
    _TMP163.z = _TMP17[2].z;
    _TMP890111[2] = vec3(float(_TMP161.x), float(_TMP162.y), float(_TMP163.z));
    _r0113 = _v0111.x*_TMP890111[0];
    _r0113 = _r0113 + _v0111.y*_TMP890111[1];
    _r0113 = _r0113 + _v0111.z*_TMP890111[2];
    _TMP20 = vec3(float(_r0113.x), float(_r0113.y), float(_r0113.z));
    _TMP21 = TEXCOORD0.xy + _uvOffset0;
    _skinMatrix00118[0] = _skinMatrix[(4*int(BLENDINDICES0.x) + 0)];
    _skinMatrix00118[1] = _skinMatrix[(4*int(BLENDINDICES0.x) + 1)];
    _skinMatrix00118[2] = _skinMatrix[(4*int(BLENDINDICES0.x) + 2)];
    _skinMatrix00118[3] = _skinMatrix[(4*int(BLENDINDICES0.x) + 3)];
    _skinMatrix10118[0] = _skinMatrix[(4*int(BLENDINDICES0.y) + 0)];
    _skinMatrix10118[1] = _skinMatrix[(4*int(BLENDINDICES0.y) + 1)];
    _skinMatrix10118[2] = _skinMatrix[(4*int(BLENDINDICES0.y) + 2)];
    _skinMatrix10118[3] = _skinMatrix[(4*int(BLENDINDICES0.y) + 3)];
    _r0120 = cg_Vertex.x*_skinMatrix00118[0];
    _r0120 = _r0120 + cg_Vertex.y*_skinMatrix00118[1];
    _r0120 = _r0120 + cg_Vertex.z*_skinMatrix00118[2];
    _r0120 = _r0120 + cg_Vertex.w*_skinMatrix00118[3];
    _r0122 = cg_Vertex.x*_skinMatrix10118[0];
    _r0122 = _r0122 + cg_Vertex.y*_skinMatrix10118[1];
    _r0122 = _r0122 + cg_Vertex.z*_skinMatrix10118[2];
    _r0122 = _r0122 + cg_Vertex.w*_skinMatrix10118[3];
    _TMP5 = vec4(float((_r0120*float(BLENDWEIGHT0.x) + _r0122*float(BLENDWEIGHT0.y)).x), float((_r0120*float(BLENDWEIGHT0.x) + _r0122*float(BLENDWEIGHT0.y)).y), float((_r0120*float(BLENDWEIGHT0.x) + _r0122*float(BLENDWEIGHT0.y)).z), float((_r0120*float(BLENDWEIGHT0.x) + _r0122*float(BLENDWEIGHT0.y)).w));
    _TMP18 = vec4(float(_TMP5.x), float(_TMP5.y), float(_TMP5.z), float(_TMP5.w));
    _r0126 = _TMP18.x*_world[0];
    _r0126 = _r0126 + _TMP18.y*_world[1];
    _r0126 = _r0126 + _TMP18.z*_world[2];
    _r0126 = _r0126 + _TMP18.w*_world[3];
    _r0128 = _r0126.x*_viewProj[0];
    _r0128 = _r0128 + _r0126.y*_viewProj[1];
    _r0128 = _r0128 + _r0126.z*_viewProj[2];
    _r0128 = _r0128 + _r0126.w*_viewProj[3];
    _M0134[0] = vec4(float(_TMP17[0].x), float(_TMP17[0].y), float(_TMP17[0].z), float(_TMP17[0].w));
    _M0134[1] = vec4(float(_TMP17[1].x), float(_TMP17[1].y), float(_TMP17[1].z), float(_TMP17[1].w));
    _M0134[2] = vec4(float(_TMP17[2].x), float(_TMP17[2].y), float(_TMP17[2].z), float(_TMP17[2].w));
    _M0134[3] = vec4(float(_TMP17[3].x), float(_TMP17[3].y), float(_TMP17[3].z), float(_TMP17[3].w));
    _r0134 = _TMP18.x*_M0134[0];
    _r0134 = _r0134 + _TMP18.y*_M0134[1];
    _r0134 = _r0134 + _TMP18.z*_M0134[2];
    _r0134 = _r0134 + _TMP18.w*_M0134[3];
    _TMP15._texcoord0.xyzw = vec4(float(_TMP20.x), float(_TMP20.y), float(_TMP20.z), 1.00000000E+000);
    _TMP15._texcoord2.xy = vec2(float(_TMP21.x), float(_TMP21.y));
    _v0140 = vec4(float(float(((COLOR*_kTint)*2.00000000E+000).x)), float(float(((COLOR*_kTint)*2.00000000E+000).y)), float(float(((COLOR*_kTint)*2.00000000E+000).z)), float(float(((COLOR*_kTint)*2.00000000E+000).w)));
    _b0142 = vec4(float(_v0140.x), float(_v0140.y), float(_v0140.z), float(_v0140.w));
    _TMP8 = (_b0142);
    _TMP15._varying_colorSet0 = vec4(float(_TMP8.x), float(_TMP8.y), float(_TMP8.z), float(_TMP8.w));
    _TMP0 = length(_r0134.xyz);
    _b0146 = _TMP0 - float(_fog_params.x);
    _TMP1 = max(0.00000000E+000, _b0146);
    _dist = float(_TMP1);
    _a0148 = _dist/_fog_params.z;
    _TMP6 = min(float(_a0148), 1.00000000E+000);
    _TMP2 = float(_TMP6);
    _dd = float((1.00000000E+000 - float(_TMP2)));
    _TMP15._texcoord3 = float(_dd);
    cg_TexCoord2.xy = _TMP15._texcoord2;
    cg_TexCoord0 = _TMP15._texcoord0;
    cg_TexCoord3.x = _TMP15._texcoord3;
    cg_TexCoord1.xyz = _r0134.xyz;
    gl_Position = _r0128;
    cg_FrontColor = vec4(float(_TMP15._varying_colorSet0.x), float(_TMP15._varying_colorSet0.y), float(_TMP15._varying_colorSet0.z), float(_TMP15._varying_colorSet0.w));
    return;
} 
