//SharedShaders/0x3572582c.ios_vcode uklgonzale Wed Mar 12 14:32:05 2014

precision highp float;



struct VertexInput {
    vec4 _position;
    vec4 _normal;
    vec4 _colorSet0;
    vec4 _blendWeight0;
    vec4 _blendIndices0;
};

struct VertexOutput {
    vec4 _varying_position;
    vec4 _varying_colorSet0;
    vec4 _texcoord0;
    float _texcoord1;
};

struct FragmentOutput {
    vec4 _color[1];
};

VertexOutput _TMP15;
float _TMP2;
float _TMP6;
float _TMP1;
float _TMP0;
vec4 _TMP8;
vec3 _TMP20;
vec4 _TMP18;
vec4 _TMP17[4];
vec4 _TMP5;
float _TMP10;
float _TMP9;
float _TMP12;
float _TMP11;
vec4 _C0087[4];
vec3 _normal0089;
vec3 _v0091;
vec3 _r0093;
vec3 _M0093[3];
vec3 _r0095;
vec3 _M0095[3];
vec3 _v0097;
vec3 _v0103;
vec3 _TMP810103[3];
vec3 _r0105;
vec4 _skinMatrix00108[4];
vec4 _skinMatrix10108[4];
vec4 _r0110;
vec4 _r0112;
vec4 _r0116;
vec4 _r0118;
vec4 _r0124;
vec4 _M0124[4];
vec4 _v0128;
vec4 _b0130;
float _b0134;
float _a0136;
attribute vec4 NORMAL;
attribute vec4 COLOR;
attribute vec4 BLENDWEIGHT0;
attribute vec4 BLENDINDICES0;
vec3 _TMP137;
vec3 _TMP138;
vec3 _TMP139;
vec3 _TMP140;
vec3 _TMP141;
vec3 _TMP142;
vec3 _TMP143;
vec3 _TMP144;
vec3 _TMP145;
vec3 _TMP146;
vec3 _TMP147;
vec3 _TMP148;
vec3 _TMP149;
vec3 _TMP150;
vec3 _TMP151;
uniform vec4 _viewProj[4];
uniform vec4 _vs_view[4];
uniform vec4 _world[4];
uniform vec4 _skinMatrix[36];
uniform vec4 _kTint;
uniform vec4 _fog_params;
attribute vec4 cg_Vertex;
varying vec4 cg_FrontColor;
varying vec4 cg_TexCoord1;
varying vec4 cg_TexCoord0;

 void main()
{

    float _dist;
    float _dd;

    _C0087[0] = _world[0].x*_vs_view[0] + _world[0].y*_vs_view[1] + _world[0].z*_vs_view[2] + _world[0].w*_vs_view[3];
    _C0087[1] = _world[1].x*_vs_view[0] + _world[1].y*_vs_view[1] + _world[1].z*_vs_view[2] + _world[1].w*_vs_view[3];
    _C0087[2] = _world[2].x*_vs_view[0] + _world[2].y*_vs_view[1] + _world[2].z*_vs_view[2] + _world[2].w*_vs_view[3];
    _C0087[3] = _world[3].x*_vs_view[0] + _world[3].y*_vs_view[1] + _world[3].z*_vs_view[2] + _world[3].w*_vs_view[3];
    _TMP17[0] = vec4(float(_C0087[0].x), float(_C0087[0].y), float(_C0087[0].z), float(_C0087[0].w));
    _TMP17[1] = vec4(float(_C0087[1].x), float(_C0087[1].y), float(_C0087[1].z), float(_C0087[1].w));
    _TMP17[2] = vec4(float(_C0087[2].x), float(_C0087[2].y), float(_C0087[2].z), float(_C0087[2].w));
    _TMP17[3] = vec4(float(_C0087[3].x), float(_C0087[3].y), float(_C0087[3].z), float(_C0087[3].w));
    _normal0089 = NORMAL.xyz*2.00000000E+000 - 1.00000000E+000;
    _TMP137.x = _skinMatrix[(4*int(BLENDINDICES0.x) + 0)].x;
    _TMP137.y = _skinMatrix[(4*int(BLENDINDICES0.x) + 0)].y;
    _TMP137.z = _skinMatrix[(4*int(BLENDINDICES0.x) + 0)].z;
    _TMP138.x = _skinMatrix[(4*int(BLENDINDICES0.x) + 1)].x;
    _TMP138.y = _skinMatrix[(4*int(BLENDINDICES0.x) + 1)].y;
    _TMP138.z = _skinMatrix[(4*int(BLENDINDICES0.x) + 1)].z;
    _TMP139.x = _skinMatrix[(4*int(BLENDINDICES0.x) + 2)].x;
    _TMP139.y = _skinMatrix[(4*int(BLENDINDICES0.x) + 2)].y;
    _TMP139.z = _skinMatrix[(4*int(BLENDINDICES0.x) + 2)].z;
    _M0093[0] = vec3(float(_TMP137.x), float(_TMP137.y), float(_TMP137.z));
    _M0093[1] = vec3(float(_TMP138.x), float(_TMP138.y), float(_TMP138.z));
    _M0093[2] = vec3(float(_TMP139.x), float(_TMP139.y), float(_TMP139.z));
    _r0093 = _normal0089.x*_M0093[0];
    _r0093 = _r0093 + _normal0089.y*_M0093[1];
    _r0093 = _r0093 + _normal0089.z*_M0093[2];
    _TMP140.x = _skinMatrix[(4*int(BLENDINDICES0.y) + 0)].x;
    _TMP140.y = _skinMatrix[(4*int(BLENDINDICES0.y) + 0)].y;
    _TMP140.z = _skinMatrix[(4*int(BLENDINDICES0.y) + 0)].z;
    _TMP141.x = _skinMatrix[(4*int(BLENDINDICES0.y) + 1)].x;
    _TMP141.y = _skinMatrix[(4*int(BLENDINDICES0.y) + 1)].y;
    _TMP141.z = _skinMatrix[(4*int(BLENDINDICES0.y) + 1)].z;
    _TMP142.x = _skinMatrix[(4*int(BLENDINDICES0.y) + 2)].x;
    _TMP142.y = _skinMatrix[(4*int(BLENDINDICES0.y) + 2)].y;
    _TMP142.z = _skinMatrix[(4*int(BLENDINDICES0.y) + 2)].z;
    _M0095[0] = vec3(float(_TMP140.x), float(_TMP140.y), float(_TMP140.z));
    _M0095[1] = vec3(float(_TMP141.x), float(_TMP141.y), float(_TMP141.z));
    _M0095[2] = vec3(float(_TMP142.x), float(_TMP142.y), float(_TMP142.z));
    _r0095 = _normal0089.x*_M0095[0];
    _r0095 = _r0095 + _normal0089.y*_M0095[1];
    _r0095 = _r0095 + _normal0089.z*_M0095[2];
    _v0097 = _r0093*BLENDWEIGHT0.x + _r0095*(1.00000000E+000 - BLENDWEIGHT0.x);
    _TMP11 = dot(vec3(float(_v0097.x), float(_v0097.y), float(_v0097.z)), vec3(float(_v0097.x), float(_v0097.y), float(_v0097.z)));
    _TMP9 = float(_TMP11);
    _TMP12 = inversesqrt(float(_TMP9));
    _TMP10 = float(_TMP12);
    _v0091 = _TMP10*_v0097;
    _v0103 = vec3(float(_v0091.x), float(_v0091.y), float(_v0091.z));
    _TMP143.x = _TMP17[0].x;
    _TMP144.y = _TMP17[0].y;
    _TMP145.z = _TMP17[0].z;
    _TMP810103[0] = vec3(float(_TMP143.x), float(_TMP144.y), float(_TMP145.z));
    _TMP146.x = _TMP17[1].x;
    _TMP147.y = _TMP17[1].y;
    _TMP148.z = _TMP17[1].z;
    _TMP810103[1] = vec3(float(_TMP146.x), float(_TMP147.y), float(_TMP148.z));
    _TMP149.x = _TMP17[2].x;
    _TMP150.y = _TMP17[2].y;
    _TMP151.z = _TMP17[2].z;
    _TMP810103[2] = vec3(float(_TMP149.x), float(_TMP150.y), float(_TMP151.z));
    _r0105 = _v0103.x*_TMP810103[0];
    _r0105 = _r0105 + _v0103.y*_TMP810103[1];
    _r0105 = _r0105 + _v0103.z*_TMP810103[2];
    _TMP20 = vec3(float(_r0105.x), float(_r0105.y), float(_r0105.z));
    _skinMatrix00108[0] = _skinMatrix[(4*int(BLENDINDICES0.x) + 0)];
    _skinMatrix00108[1] = _skinMatrix[(4*int(BLENDINDICES0.x) + 1)];
    _skinMatrix00108[2] = _skinMatrix[(4*int(BLENDINDICES0.x) + 2)];
    _skinMatrix00108[3] = _skinMatrix[(4*int(BLENDINDICES0.x) + 3)];
    _skinMatrix10108[0] = _skinMatrix[(4*int(BLENDINDICES0.y) + 0)];
    _skinMatrix10108[1] = _skinMatrix[(4*int(BLENDINDICES0.y) + 1)];
    _skinMatrix10108[2] = _skinMatrix[(4*int(BLENDINDICES0.y) + 2)];
    _skinMatrix10108[3] = _skinMatrix[(4*int(BLENDINDICES0.y) + 3)];
    _r0110 = cg_Vertex.x*_skinMatrix00108[0];
    _r0110 = _r0110 + cg_Vertex.y*_skinMatrix00108[1];
    _r0110 = _r0110 + cg_Vertex.z*_skinMatrix00108[2];
    _r0110 = _r0110 + cg_Vertex.w*_skinMatrix00108[3];
    _r0112 = cg_Vertex.x*_skinMatrix10108[0];
    _r0112 = _r0112 + cg_Vertex.y*_skinMatrix10108[1];
    _r0112 = _r0112 + cg_Vertex.z*_skinMatrix10108[2];
    _r0112 = _r0112 + cg_Vertex.w*_skinMatrix10108[3];
    _TMP5 = vec4(float((_r0110*float(BLENDWEIGHT0.x) + _r0112*float(BLENDWEIGHT0.y)).x), float((_r0110*float(BLENDWEIGHT0.x) + _r0112*float(BLENDWEIGHT0.y)).y), float((_r0110*float(BLENDWEIGHT0.x) + _r0112*float(BLENDWEIGHT0.y)).z), float((_r0110*float(BLENDWEIGHT0.x) + _r0112*float(BLENDWEIGHT0.y)).w));
    _TMP18 = vec4(float(_TMP5.x), float(_TMP5.y), float(_TMP5.z), float(_TMP5.w));
    _r0116 = _TMP18.x*_world[0];
    _r0116 = _r0116 + _TMP18.y*_world[1];
    _r0116 = _r0116 + _TMP18.z*_world[2];
    _r0116 = _r0116 + _TMP18.w*_world[3];
    _r0118 = _r0116.x*_viewProj[0];
    _r0118 = _r0118 + _r0116.y*_viewProj[1];
    _r0118 = _r0118 + _r0116.z*_viewProj[2];
    _r0118 = _r0118 + _r0116.w*_viewProj[3];
    _M0124[0] = vec4(float(_TMP17[0].x), float(_TMP17[0].y), float(_TMP17[0].z), float(_TMP17[0].w));
    _M0124[1] = vec4(float(_TMP17[1].x), float(_TMP17[1].y), float(_TMP17[1].z), float(_TMP17[1].w));
    _M0124[2] = vec4(float(_TMP17[2].x), float(_TMP17[2].y), float(_TMP17[2].z), float(_TMP17[2].w));
    _M0124[3] = vec4(float(_TMP17[3].x), float(_TMP17[3].y), float(_TMP17[3].z), float(_TMP17[3].w));
    _r0124 = _TMP18.x*_M0124[0];
    _r0124 = _r0124 + _TMP18.y*_M0124[1];
    _r0124 = _r0124 + _TMP18.z*_M0124[2];
    _r0124 = _r0124 + _TMP18.w*_M0124[3];
    _TMP15._texcoord0.xyzw = vec4(float(_TMP20.x), float(_TMP20.y), float(_TMP20.z), 1.00000000E+000);
    _v0128 = vec4(float(float(((COLOR*_kTint)*2.00000000E+000).x)), float(float(((COLOR*_kTint)*2.00000000E+000).y)), float(float(((COLOR*_kTint)*2.00000000E+000).z)), float(float(((COLOR*_kTint)*2.00000000E+000).w)));
    _b0130 = vec4(float(_v0128.x), float(_v0128.y), float(_v0128.z), float(_v0128.w));
    _TMP8 = (_b0130);
    _TMP15._varying_colorSet0 = vec4(float(_TMP8.x), float(_TMP8.y), float(_TMP8.z), float(_TMP8.w));
    _TMP0 = length(_r0124.xyz);
    _b0134 = _TMP0 - float(_fog_params.x);
    _TMP1 = max(0.00000000E+000, _b0134);
    _dist = float(_TMP1);
    _a0136 = _dist/_fog_params.z;
    _TMP6 = min(float(_a0136), 1.00000000E+000);
    _TMP2 = float(_TMP6);
    _dd = float((1.00000000E+000 - float(_TMP2)));
    _TMP15._texcoord1 = float(_dd);
    cg_TexCoord0 = _TMP15._texcoord0;
    cg_TexCoord1.x = _TMP15._texcoord1;
    gl_Position = _r0118;
    cg_FrontColor = vec4(float(_TMP15._varying_colorSet0.x), float(_TMP15._varying_colorSet0.y), float(_TMP15._varying_colorSet0.z), float(_TMP15._varying_colorSet0.w));
    return;
} 
