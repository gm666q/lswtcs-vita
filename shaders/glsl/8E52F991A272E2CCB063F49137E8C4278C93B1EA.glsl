//SharedShaders/0x06c4fdf9.ios_vcode uklgonzale Tue Mar 11 16:29:55 2014

precision highp float;



struct VertexInput {
    vec4 _position;
    vec4 _normal;
    vec4 _colorSet0;
    vec4 _blendWeight0;
    vec4 _blendIndices0;
    vec2 _uvSet0;
};

struct VertexOutput {
    vec4 _varying_position;
    vec4 _varying_colorSet0;
    vec4 _texcoord0;
    vec2 _texcoord1;
    vec2 _texcoord2;
    float _texcoord3;
};

struct FragmentOutput {
    vec4 _color[1];
};

VertexOutput _TMP17;
float _TMP2;
float _TMP8;
float _TMP1;
float _TMP0;
vec3 _TMP6;
vec3 _TMP22;
float _TMP12;
float _TMP11;
float _TMP14;
float _TMP13;
vec4 _TMP10;
vec2 _TMP23;
vec4 _TMP20;
vec4 _TMP19[4];
vec4 _TMP5;
vec4 _C0096[4];
vec3 _normal0098;
vec3 _v0100;
vec3 _r0102;
vec3 _M0102[3];
vec3 _r0104;
vec3 _M0104[3];
vec3 _v0106;
vec3 _v0112;
vec3 _TMP900112[3];
vec3 _r0114;
vec4 _skinMatrix00119[4];
vec4 _skinMatrix10119[4];
vec4 _r0121;
vec4 _r0123;
vec4 _r0127;
vec4 _r0129;
vec4 _r0135;
vec4 _M0135[4];
vec4 _v0140;
vec4 _b0142;
vec3 _r0151;
float _b0155;
float _a0157;
attribute vec4 NORMAL;
attribute vec4 COLOR;
attribute vec4 BLENDWEIGHT0;
attribute vec4 BLENDINDICES0;
attribute vec4 TEXCOORD0;
vec3 _TMP158;
vec3 _TMP159;
vec3 _TMP160;
vec3 _TMP161;
vec3 _TMP162;
vec3 _TMP163;
vec3 _TMP164;
vec3 _TMP165;
vec3 _TMP166;
vec3 _TMP167;
vec3 _TMP168;
vec3 _TMP169;
vec3 _TMP170;
vec3 _TMP171;
vec3 _TMP172;
vec3 _TMP173;
vec3 _TMP174;
vec3 _TMP175;
uniform vec4 _viewProj[4];
uniform vec4 _vs_view[4];
uniform vec4 _world[4];
uniform vec4 _ps2ShineMtx[4];
uniform vec4 _skinMatrix[36];
uniform vec4 _kTint;
uniform vec4 _fog_params;
uniform vec2 _uvOffset0;
attribute vec4 cg_Vertex;
varying vec4 cg_FrontColor;
varying vec4 cg_TexCoord1;
varying vec4 cg_TexCoord3;
varying vec4 cg_TexCoord0;
varying vec4 cg_TexCoord2;

 void main()
{

    float _dist;
    float _dd;

    _C0096[0] = _world[0].x*_vs_view[0] + _world[0].y*_vs_view[1] + _world[0].z*_vs_view[2] + _world[0].w*_vs_view[3];
    _C0096[1] = _world[1].x*_vs_view[0] + _world[1].y*_vs_view[1] + _world[1].z*_vs_view[2] + _world[1].w*_vs_view[3];
    _C0096[2] = _world[2].x*_vs_view[0] + _world[2].y*_vs_view[1] + _world[2].z*_vs_view[2] + _world[2].w*_vs_view[3];
    _C0096[3] = _world[3].x*_vs_view[0] + _world[3].y*_vs_view[1] + _world[3].z*_vs_view[2] + _world[3].w*_vs_view[3];
    _TMP19[0] = vec4(float(_C0096[0].x), float(_C0096[0].y), float(_C0096[0].z), float(_C0096[0].w));
    _TMP19[1] = vec4(float(_C0096[1].x), float(_C0096[1].y), float(_C0096[1].z), float(_C0096[1].w));
    _TMP19[2] = vec4(float(_C0096[2].x), float(_C0096[2].y), float(_C0096[2].z), float(_C0096[2].w));
    _TMP19[3] = vec4(float(_C0096[3].x), float(_C0096[3].y), float(_C0096[3].z), float(_C0096[3].w));
    _normal0098 = NORMAL.xyz*2.00000000E+000 - 1.00000000E+000;
    _TMP158.x = _skinMatrix[(4*int(BLENDINDICES0.x) + 0)].x;
    _TMP158.y = _skinMatrix[(4*int(BLENDINDICES0.x) + 0)].y;
    _TMP158.z = _skinMatrix[(4*int(BLENDINDICES0.x) + 0)].z;
    _TMP159.x = _skinMatrix[(4*int(BLENDINDICES0.x) + 1)].x;
    _TMP159.y = _skinMatrix[(4*int(BLENDINDICES0.x) + 1)].y;
    _TMP159.z = _skinMatrix[(4*int(BLENDINDICES0.x) + 1)].z;
    _TMP160.x = _skinMatrix[(4*int(BLENDINDICES0.x) + 2)].x;
    _TMP160.y = _skinMatrix[(4*int(BLENDINDICES0.x) + 2)].y;
    _TMP160.z = _skinMatrix[(4*int(BLENDINDICES0.x) + 2)].z;
    _M0102[0] = vec3(float(_TMP158.x), float(_TMP158.y), float(_TMP158.z));
    _M0102[1] = vec3(float(_TMP159.x), float(_TMP159.y), float(_TMP159.z));
    _M0102[2] = vec3(float(_TMP160.x), float(_TMP160.y), float(_TMP160.z));
    _r0102 = _normal0098.x*_M0102[0];
    _r0102 = _r0102 + _normal0098.y*_M0102[1];
    _r0102 = _r0102 + _normal0098.z*_M0102[2];
    _TMP161.x = _skinMatrix[(4*int(BLENDINDICES0.y) + 0)].x;
    _TMP161.y = _skinMatrix[(4*int(BLENDINDICES0.y) + 0)].y;
    _TMP161.z = _skinMatrix[(4*int(BLENDINDICES0.y) + 0)].z;
    _TMP162.x = _skinMatrix[(4*int(BLENDINDICES0.y) + 1)].x;
    _TMP162.y = _skinMatrix[(4*int(BLENDINDICES0.y) + 1)].y;
    _TMP162.z = _skinMatrix[(4*int(BLENDINDICES0.y) + 1)].z;
    _TMP163.x = _skinMatrix[(4*int(BLENDINDICES0.y) + 2)].x;
    _TMP163.y = _skinMatrix[(4*int(BLENDINDICES0.y) + 2)].y;
    _TMP163.z = _skinMatrix[(4*int(BLENDINDICES0.y) + 2)].z;
    _M0104[0] = vec3(float(_TMP161.x), float(_TMP161.y), float(_TMP161.z));
    _M0104[1] = vec3(float(_TMP162.x), float(_TMP162.y), float(_TMP162.z));
    _M0104[2] = vec3(float(_TMP163.x), float(_TMP163.y), float(_TMP163.z));
    _r0104 = _normal0098.x*_M0104[0];
    _r0104 = _r0104 + _normal0098.y*_M0104[1];
    _r0104 = _r0104 + _normal0098.z*_M0104[2];
    _v0106 = _r0102*BLENDWEIGHT0.x + _r0104*(1.00000000E+000 - BLENDWEIGHT0.x);
    _TMP13 = dot(vec3(float(_v0106.x), float(_v0106.y), float(_v0106.z)), vec3(float(_v0106.x), float(_v0106.y), float(_v0106.z)));
    _TMP11 = float(_TMP13);
    _TMP14 = inversesqrt(float(_TMP11));
    _TMP12 = float(_TMP14);
    _v0100 = _TMP12*_v0106;
    _v0112 = vec3(float(_v0100.x), float(_v0100.y), float(_v0100.z));
    _TMP164.x = _TMP19[0].x;
    _TMP165.y = _TMP19[0].y;
    _TMP166.z = _TMP19[0].z;
    _TMP900112[0] = vec3(float(_TMP164.x), float(_TMP165.y), float(_TMP166.z));
    _TMP167.x = _TMP19[1].x;
    _TMP168.y = _TMP19[1].y;
    _TMP169.z = _TMP19[1].z;
    _TMP900112[1] = vec3(float(_TMP167.x), float(_TMP168.y), float(_TMP169.z));
    _TMP170.x = _TMP19[2].x;
    _TMP171.y = _TMP19[2].y;
    _TMP172.z = _TMP19[2].z;
    _TMP900112[2] = vec3(float(_TMP170.x), float(_TMP171.y), float(_TMP172.z));
    _r0114 = _v0112.x*_TMP900112[0];
    _r0114 = _r0114 + _v0112.y*_TMP900112[1];
    _r0114 = _r0114 + _v0112.z*_TMP900112[2];
    _TMP22 = vec3(float(_r0114.x), float(_r0114.y), float(_r0114.z));
    _TMP23 = TEXCOORD0.xy + _uvOffset0;
    _skinMatrix00119[0] = _skinMatrix[(4*int(BLENDINDICES0.x) + 0)];
    _skinMatrix00119[1] = _skinMatrix[(4*int(BLENDINDICES0.x) + 1)];
    _skinMatrix00119[2] = _skinMatrix[(4*int(BLENDINDICES0.x) + 2)];
    _skinMatrix00119[3] = _skinMatrix[(4*int(BLENDINDICES0.x) + 3)];
    _skinMatrix10119[0] = _skinMatrix[(4*int(BLENDINDICES0.y) + 0)];
    _skinMatrix10119[1] = _skinMatrix[(4*int(BLENDINDICES0.y) + 1)];
    _skinMatrix10119[2] = _skinMatrix[(4*int(BLENDINDICES0.y) + 2)];
    _skinMatrix10119[3] = _skinMatrix[(4*int(BLENDINDICES0.y) + 3)];
    _r0121 = cg_Vertex.x*_skinMatrix00119[0];
    _r0121 = _r0121 + cg_Vertex.y*_skinMatrix00119[1];
    _r0121 = _r0121 + cg_Vertex.z*_skinMatrix00119[2];
    _r0121 = _r0121 + cg_Vertex.w*_skinMatrix00119[3];
    _r0123 = cg_Vertex.x*_skinMatrix10119[0];
    _r0123 = _r0123 + cg_Vertex.y*_skinMatrix10119[1];
    _r0123 = _r0123 + cg_Vertex.z*_skinMatrix10119[2];
    _r0123 = _r0123 + cg_Vertex.w*_skinMatrix10119[3];
    _TMP5 = vec4(float((_r0121*float(BLENDWEIGHT0.x) + _r0123*float(BLENDWEIGHT0.y)).x), float((_r0121*float(BLENDWEIGHT0.x) + _r0123*float(BLENDWEIGHT0.y)).y), float((_r0121*float(BLENDWEIGHT0.x) + _r0123*float(BLENDWEIGHT0.y)).z), float((_r0121*float(BLENDWEIGHT0.x) + _r0123*float(BLENDWEIGHT0.y)).w));
    _TMP20 = vec4(float(_TMP5.x), float(_TMP5.y), float(_TMP5.z), float(_TMP5.w));
    _r0127 = _TMP20.x*_world[0];
    _r0127 = _r0127 + _TMP20.y*_world[1];
    _r0127 = _r0127 + _TMP20.z*_world[2];
    _r0127 = _r0127 + _TMP20.w*_world[3];
    _r0129 = _r0127.x*_viewProj[0];
    _r0129 = _r0129 + _r0127.y*_viewProj[1];
    _r0129 = _r0129 + _r0127.z*_viewProj[2];
    _r0129 = _r0129 + _r0127.w*_viewProj[3];
    _M0135[0] = vec4(float(_TMP19[0].x), float(_TMP19[0].y), float(_TMP19[0].z), float(_TMP19[0].w));
    _M0135[1] = vec4(float(_TMP19[1].x), float(_TMP19[1].y), float(_TMP19[1].z), float(_TMP19[1].w));
    _M0135[2] = vec4(float(_TMP19[2].x), float(_TMP19[2].y), float(_TMP19[2].z), float(_TMP19[2].w));
    _M0135[3] = vec4(float(_TMP19[3].x), float(_TMP19[3].y), float(_TMP19[3].z), float(_TMP19[3].w));
    _r0135 = _TMP20.x*_M0135[0];
    _r0135 = _r0135 + _TMP20.y*_M0135[1];
    _r0135 = _r0135 + _TMP20.z*_M0135[2];
    _r0135 = _r0135 + _TMP20.w*_M0135[3];
    _TMP17._texcoord0.xyzw = vec4(float(_TMP22.x), float(_TMP22.y), float(_TMP22.z), 1.00000000E+000);
    _TMP17._texcoord1.xy = vec2(float(_TMP23.x), float(_TMP23.y));
    _v0140 = vec4(float(float(((COLOR*_kTint)*2.00000000E+000).x)), float(float(((COLOR*_kTint)*2.00000000E+000).y)), float(float(((COLOR*_kTint)*2.00000000E+000).z)), float(float(((COLOR*_kTint)*2.00000000E+000).w)));
    _b0142 = vec4(float(_v0140.x), float(_v0140.y), float(_v0140.z), float(_v0140.w));
    _TMP10 = (_b0142);
    _TMP17._varying_colorSet0 = vec4(float(_TMP10.x), float(_TMP10.y), float(_TMP10.z), float(_TMP10.w));
    _TMP13 = dot(vec3(float(_TMP22.x), float(_TMP22.y), float(_TMP22.z)), vec3(float(_TMP22.x), float(_TMP22.y), float(_TMP22.z)));
    _TMP11 = float(_TMP13);
    _TMP14 = inversesqrt(float(_TMP11));
    _TMP12 = float(_TMP14);
    _TMP6 = _TMP12*_TMP22;
    _TMP173.x = _ps2ShineMtx[0].x;
    _TMP173.y = _ps2ShineMtx[0].y;
    _TMP173.z = _ps2ShineMtx[0].z;
    _r0151 = _TMP6.x*_TMP173;
    _TMP174.x = _ps2ShineMtx[1].x;
    _TMP174.y = _ps2ShineMtx[1].y;
    _TMP174.z = _ps2ShineMtx[1].z;
    _r0151 = _r0151 + _TMP6.y*_TMP174;
    _TMP175.x = _ps2ShineMtx[2].x;
    _TMP175.y = _ps2ShineMtx[2].y;
    _TMP175.z = _ps2ShineMtx[2].z;
    _r0151 = _r0151 + _TMP6.z*_TMP175;
    _TMP17._texcoord2.xy = vec2(float(_r0151.x), float(_r0151.y));
    _TMP0 = length(_r0135.xyz);
    _b0155 = _TMP0 - float(_fog_params.x);
    _TMP1 = max(0.00000000E+000, _b0155);
    _dist = float(_TMP1);
    _a0157 = _dist/_fog_params.z;
    _TMP8 = min(float(_a0157), 1.00000000E+000);
    _TMP2 = float(_TMP8);
    _dd = float((1.00000000E+000 - float(_TMP2)));
    _TMP17._texcoord3 = float(_dd);
    cg_TexCoord2.xy = _TMP17._texcoord2;
    cg_TexCoord0 = _TMP17._texcoord0;
    cg_TexCoord3.x = _TMP17._texcoord3;
    cg_TexCoord1.xy = _TMP17._texcoord1;
    gl_Position = _r0129;
    cg_FrontColor = vec4(float(_TMP17._varying_colorSet0.x), float(_TMP17._varying_colorSet0.y), float(_TMP17._varying_colorSet0.z), float(_TMP17._varying_colorSet0.w));
    return;
} 
